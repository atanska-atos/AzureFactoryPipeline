{
	"name": "salesDetails",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "salesProcessingSource",
						"type": "DatasetReference"
					},
					"name": "SalesSource",
					"description": "Import data from salesProcessingSource (Sales.csv)\n"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SalesProcessing",
						"type": "DatasetReference"
					},
					"name": "cityAggregationResult"
				},
				{
					"dataset": {
						"referenceName": "SalesProcessing",
						"type": "DatasetReference"
					},
					"name": "regionAggregationResult"
				},
				{
					"dataset": {
						"referenceName": "SalesProcessing",
						"type": "DatasetReference"
					},
					"name": "shipModeAggregationResult"
				},
				{
					"dataset": {
						"referenceName": "SalesProcessing",
						"type": "DatasetReference"
					},
					"name": "stateAggregationResult"
				}
			],
			"transformations": [
				{
					"name": "stateAggregation"
				},
				{
					"name": "amountsOfUnitsSort3"
				},
				{
					"name": "cityAggregation"
				},
				{
					"name": "amountsOfUnitsSort2"
				},
				{
					"name": "regionAggregation"
				},
				{
					"name": "amountsOfUnitsSort1"
				},
				{
					"name": "shipModeAggregation"
				},
				{
					"name": "amountsOfUnitsSort4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Row ID} as string,",
				"          {Order ID} as string,",
				"          {Ship Date} as string,",
				"          {Ship Mode} as string,",
				"          {Customer ID} as string,",
				"          {Country/Region} as string,",
				"          City as string,",
				"          {State/Province} as string,",
				"          {Postal Code} as string,",
				"          Division as string,",
				"          Region as string,",
				"          {Product ID} as string,",
				"          {Product Name} as string,",
				"          Sales as string,",
				"          Units as string,",
				"          {Gross Profit} as string,",
				"          Cost as string,",
				"          OrderDay as string,",
				"          OrderMonth as string,",
				"          OrderYear as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SalesSource",
				"SalesSource aggregate(groupBy({State/Province},",
				"          Division),",
				"     {Amounts of Units} = sum(toInteger(Units)),",
				"          Sales = round(sum(toFloat(Sales)),2),",
				"          {Gross Profit} = round(sum(toFloat({Gross Profit})),2),",
				"          Cost = round(sum(toFloat(Cost)),2)) ~> stateAggregation",
				"cityAggregation sort(desc({Amounts of Units}, true)) ~> amountsOfUnitsSort3",
				"SalesSource aggregate(groupBy(City,",
				"          Division),",
				"     {Amounts of Units} = sum(toInteger(Units)),",
				"          Sales = round(sum(toFloat(Sales)),2),",
				"          {Gross Profit} = round(sum(toFloat({Gross Profit})),2),",
				"          Cost = round(sum(toFloat(Cost)),2)) ~> cityAggregation",
				"regionAggregation sort(desc({Amounts of Units}, true)) ~> amountsOfUnitsSort2",
				"SalesSource aggregate(groupBy(Region,",
				"          Division),",
				"     {Amounts of Units} = sum(toInteger(Units)),",
				"          Sales = round(sum(toFloat(Sales)),2),",
				"          {Gross Profit} = round(sum(toFloat({Gross Profit})),2),",
				"          Cost = round(sum(toFloat(Cost)),2)) ~> regionAggregation",
				"shipModeAggregation sort(desc({Amounts of Units}, true)) ~> amountsOfUnitsSort1",
				"SalesSource aggregate(groupBy({Ship Mode},",
				"          Division),",
				"     {Amounts of Units} = sum(toInteger(Units)),",
				"          Sales = round(sum(toFloat(Sales)),2),",
				"          {Gross Profit} = round(sum(toFloat({Gross Profit})),2),",
				"          Cost = round(sum(toFloat(Cost)),2)) ~> shipModeAggregation",
				"stateAggregation sort(desc({Amounts of Units}, true)) ~> amountsOfUnitsSort4",
				"amountsOfUnitsSort3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Factory as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     filePattern:'city_division',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> cityAggregationResult",
				"amountsOfUnitsSort2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Factory as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     filePattern:'region_division',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> regionAggregationResult",
				"amountsOfUnitsSort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Factory as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     filePattern:'shipMode_division',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> shipModeAggregationResult",
				"amountsOfUnitsSort4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Factory as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     filePattern:'state_division',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> stateAggregationResult"
			]
		}
	}
}